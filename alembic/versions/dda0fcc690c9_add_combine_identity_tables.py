"""add combine + identity tables

Revision ID: dda0fcc690c9
Revises: 20240924_000001
Create Date: 2025-10-18 21:53:48.571472
"""

from alembic import op  # type: ignore[attr-defined]
import sqlalchemy as sa
import sqlmodel

revision = "dda0fcc690c9"
down_revision = "20240924_000001"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "players_master",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("prefix", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("first_name", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("middle_name", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("last_name", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("suffix", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("display_name", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("birthdate", sa.Date(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_players_master_display_name"),
        "players_master",
        ["display_name"],
        unique=False,
    )
    op.create_index(
        op.f("ix_players_master_first_name"),
        "players_master",
        ["first_name"],
        unique=False,
    )
    op.create_index(
        op.f("ix_players_master_last_name"),
        "players_master",
        ["last_name"],
        unique=False,
    )
    op.create_table(
        "seasons",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("code", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("start_year", sa.Integer(), nullable=False),
        sa.Column("end_year", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_seasons_code"), "seasons", ["code"], unique=True)
    op.create_table(
        "combine_agility",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("player_id", sa.Integer(), nullable=False),
        sa.Column("season_id", sa.Integer(), nullable=False),
        sa.Column("pos", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("lane_agility_time_s", sa.Float(), nullable=True),
        sa.Column("shuttle_run_s", sa.Float(), nullable=True),
        sa.Column("three_quarter_sprint_s", sa.Float(), nullable=True),
        sa.Column("standing_vertical_in", sa.Float(), nullable=True),
        sa.Column("max_vertical_in", sa.Float(), nullable=True),
        sa.Column("bench_press_reps", sa.Integer(), nullable=True),
        sa.Column("nba_stats_player_id", sa.Integer(), nullable=True),
        sa.Column("raw_player_name", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("ingested_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["player_id"],
            ["players_master.id"],
        ),
        sa.ForeignKeyConstraint(
            ["season_id"],
            ["seasons.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("player_id", "season_id", name="uq_agility_player_season"),
    )
    op.create_index(
        op.f("ix_combine_agility_player_id"),
        "combine_agility",
        ["player_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_combine_agility_pos"), "combine_agility", ["pos"], unique=False
    )
    op.create_index(
        op.f("ix_combine_agility_season_id"),
        "combine_agility",
        ["season_id"],
        unique=False,
    )
    op.create_table(
        "combine_anthro",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("player_id", sa.Integer(), nullable=False),
        sa.Column("season_id", sa.Integer(), nullable=False),
        sa.Column("pos", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("body_fat_pct", sa.Float(), nullable=True),
        sa.Column("hand_length_in", sa.Float(), nullable=True),
        sa.Column("hand_width_in", sa.Float(), nullable=True),
        sa.Column("height_wo_shoes_in", sa.Float(), nullable=True),
        sa.Column("height_w_shoes_in", sa.Float(), nullable=True),
        sa.Column("standing_reach_in", sa.Float(), nullable=True),
        sa.Column("wingspan_in", sa.Float(), nullable=True),
        sa.Column("weight_lb", sa.Float(), nullable=True),
        sa.Column("nba_stats_player_id", sa.Integer(), nullable=True),
        sa.Column("raw_player_name", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("ingested_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["player_id"],
            ["players_master.id"],
        ),
        sa.ForeignKeyConstraint(
            ["season_id"],
            ["seasons.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("player_id", "season_id", name="uq_anthro_player_season"),
    )
    op.create_index(
        op.f("ix_combine_anthro_player_id"),
        "combine_anthro",
        ["player_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_combine_anthro_pos"), "combine_anthro", ["pos"], unique=False
    )
    op.create_index(
        op.f("ix_combine_anthro_season_id"),
        "combine_anthro",
        ["season_id"],
        unique=False,
    )
    op.create_table(
        "combine_shooting_results",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("player_id", sa.Integer(), nullable=False),
        sa.Column("season_id", sa.Integer(), nullable=False),
        sa.Column("pos", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("drill", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("fgm", sa.Integer(), nullable=True),
        sa.Column("fga", sa.Integer(), nullable=True),
        sa.Column("nba_stats_player_id", sa.Integer(), nullable=True),
        sa.Column("raw_player_name", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("ingested_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["player_id"],
            ["players_master.id"],
        ),
        sa.ForeignKeyConstraint(
            ["season_id"],
            ["seasons.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "player_id", "season_id", "drill", name="uq_shooting_player_season_drill"
        ),
    )
    op.create_index(
        op.f("ix_combine_shooting_results_drill"),
        "combine_shooting_results",
        ["drill"],
        unique=False,
    )
    op.create_index(
        op.f("ix_combine_shooting_results_player_id"),
        "combine_shooting_results",
        ["player_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_combine_shooting_results_pos"),
        "combine_shooting_results",
        ["pos"],
        unique=False,
    )
    op.create_index(
        op.f("ix_combine_shooting_results_season_id"),
        "combine_shooting_results",
        ["season_id"],
        unique=False,
    )
    op.create_table(
        "player_aliases",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("player_id", sa.Integer(), nullable=False),
        sa.Column("full_name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("prefix", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("first_name", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("middle_name", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("last_name", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("suffix", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("context", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["player_id"],
            ["players_master.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "player_id", "full_name", name="uq_player_aliases_player_fullname"
        ),
    )
    op.create_index(
        op.f("ix_player_aliases_full_name"),
        "player_aliases",
        ["full_name"],
        unique=False,
    )
    op.create_index(
        op.f("ix_player_aliases_player_id"),
        "player_aliases",
        ["player_id"],
        unique=False,
    )
    op.create_table(
        "player_external_ids",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("player_id", sa.Integer(), nullable=False),
        sa.Column("system", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("external_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("source_url", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.ForeignKeyConstraint(
            ["player_id"],
            ["players_master.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("system", "external_id", name="uq_external_system_id"),
    )
    op.create_index(
        op.f("ix_player_external_ids_player_id"),
        "player_external_ids",
        ["player_id"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_player_external_ids_player_id"), table_name="player_external_ids"
    )
    op.drop_table("player_external_ids")
    op.drop_index(op.f("ix_player_aliases_player_id"), table_name="player_aliases")
    op.drop_index(op.f("ix_player_aliases_full_name"), table_name="player_aliases")
    op.drop_table("player_aliases")
    op.drop_index(
        op.f("ix_combine_shooting_results_season_id"),
        table_name="combine_shooting_results",
    )
    op.drop_index(
        op.f("ix_combine_shooting_results_pos"), table_name="combine_shooting_results"
    )
    op.drop_index(
        op.f("ix_combine_shooting_results_player_id"),
        table_name="combine_shooting_results",
    )
    op.drop_index(
        op.f("ix_combine_shooting_results_drill"), table_name="combine_shooting_results"
    )
    op.drop_table("combine_shooting_results")
    op.drop_index(op.f("ix_combine_anthro_season_id"), table_name="combine_anthro")
    op.drop_index(op.f("ix_combine_anthro_pos"), table_name="combine_anthro")
    op.drop_index(op.f("ix_combine_anthro_player_id"), table_name="combine_anthro")
    op.drop_table("combine_anthro")
    op.drop_index(op.f("ix_combine_agility_season_id"), table_name="combine_agility")
    op.drop_index(op.f("ix_combine_agility_pos"), table_name="combine_agility")
    op.drop_index(op.f("ix_combine_agility_player_id"), table_name="combine_agility")
    op.drop_table("combine_agility")
    op.drop_index(op.f("ix_seasons_code"), table_name="seasons")
    op.drop_table("seasons")
    op.drop_index(op.f("ix_players_master_last_name"), table_name="players_master")
    op.drop_index(op.f("ix_players_master_first_name"), table_name="players_master")
    op.drop_index(op.f("ix_players_master_display_name"), table_name="players_master")
    op.drop_table("players_master")
    # ### end Alembic commands ###
